{"version":3,"sources":["Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","_useState","useState","edit","value","_useState2","Object","slicedToArray","Input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","react_default","a","createElement","className","onSubmit","preventDefault","id","Math","floor","random","text","Fragment","type","placeholder","onChange","ref","Todo","_ref","todos","completeTodo","removeTodo","updateTodo","setEdit","Components_TodoForm","map","todo","index","isComplete","key","onClick","HighlightOff_default","Edit_default","TodoList","setTodos","test","newTodos","concat","toConsumableArray","Components_Todo","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","Components_TodoList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f8b65116.chunk.js","sourcesContent":["import React, { useState,useEffect,useRef } from 'react'\r\n\r\nconst TodoForm = (props) => {\r\n    const [Input,setInput]=useState(props.edit? props.edit.value:\"\");\r\n\r\n    const inputRef=useRef(null);\r\n\r\n    useEffect(()=>{\r\n        inputRef.current.focus();\r\n    })\r\n\r\n    const handleSubmit=(e)=>{\r\n   e.preventDefault(); \r\n   \r\n   props.onSubmit({\r\n       id:Math.floor(Math.random()*10000),\r\n       text:Input\r\n   });\r\n   setInput(\"\"); \r\n    }\r\n    const handleChange=(e)=>{\r\n        setInput(e.target.value);\r\n    }\r\n  return (\r\n         <div>\r\n        <form className='todo-form' onSubmit={handleSubmit}>\r\n            {props.edit ? (<> <input type=\"text\" placeholder=\"update a Todo\" value={Input} className=\"todo-input edit \" onChange={handleChange} ref={inputRef}/>\r\n        <button className='todo-button edit'>Update</button></>):(<> <input type=\"text\" placeholder=\"Add a Todo\" value={Input} className=\"todo-input\" onChange={handleChange} ref={inputRef}/>\r\n        <button className='todo-button'>Add a todo</button></>)} \r\n       \r\n        </form>\r\n        \r\n        </div>    \r\n    \r\n  )\r\n}\r\n\r\nexport default TodoForm","\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport TodoForm from './TodoForm';\r\n\r\n\r\nconst Todo = ({todos,completeTodo,removeTodo,updateTodo}) => {\r\n    const[edit,setEdit]=useState({\r\n      id:null,\r\n      value:\"\"\r\n    })\r\n\r\n    const submitUpdate=value=>{\r\n      updateTodo(edit.id,value);\r\n      setEdit({id:null,value:''})\r\n    };\r\n\r\n    if(edit.id){\r\n      return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n  return todos.map((todo,index)=>(\r\n    <div className={todo.isComplete?'todo-row complete':'todo-row'} key={index}>\r\n      <div key={todo.id} onClick={()=>completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n          <HighlightOffIcon onClick={()=>removeTodo(todo.id)} className='delete-icon'/>\r\n          <EditIcon onClick={()=>setEdit({id:todo.id,value:todo.text})} className='edit-icon'/>\r\n      </div>\r\n      </div>\r\n  ))\r\n}\r\n\r\nexport default Todo;","import React from 'react'\r\nimport TodoForm from './TodoForm';\r\nimport { useState } from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = () => {\r\n    const [todos,setTodos]=useState([]);\r\n\r\n    const addTodo=(todo)=>{\r\n      if(!todo.text || /^\\s*$/.test(todo.text)){\r\n          return;\r\n      }\r\n      const newTodos=[todo,...todos];\r\n      setTodos(newTodos);\r\n      \r\n    }\r\n\r\n    const removeTodo=id=>{\r\n      const removeArr=[...todos].filter(todo=>todo.id!=id) \r\n\r\n      setTodos(removeArr);\r\n    }\r\n\r\n    const updateTodo=(todoId,newValue)=>{\r\n      if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n        return;\r\n    }\r\n    setTodos(prev=>prev.map(item=>(item.id===todoId ? newValue : item)));\r\n      \r\n    }\r\n\r\n    const completeTodo=id=>{\r\n      let updatedTodos=todos.map(todo=>{\r\n        if(todo.id===id){\r\n          todo.isComplete=!todo.isComplete\r\n        }\r\n        return todo;\r\n      });\r\n      setTodos(updatedTodos);\r\n    }\r\n\r\n  return (\r\n    <div className='Todo-list'>\r\n         <h1>Todo App</h1> \r\n        <TodoForm onSubmit={addTodo}/>\r\n        <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default TodoList","import React from 'react';\nimport './App.css';\nimport TodoForm from './Components/TodoForm';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n\n"],"sourceRoot":""}